generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DIRECT_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String         @id @default(uuid()) @db.VarChar(36)
  email        String         @unique
  name         String?
  password     String
  role         String         @default("user")
  image        String?        @default("")
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  deletedAt    DateTime?
  vendur_id    String?
  contribution contribution[]
}

model ResetPasswordRequest {
  id        String    @id @default(uuid()) @db.VarChar(36)
  token     String    @unique
  expires   DateTime
  userId    String    @db.VarChar(36)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model UserVerificationRequest {
  id        String    @id @default(uuid()) @db.VarChar(36)
  token     String    @unique
  expires   DateTime
  userId    String    @db.VarChar(36)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Matiere_Premiere {
  id         String   @id @default(uuid()) @db.VarChar(36)
  nom        String
  prix_achat Float
  quantite   Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Produit_Final {
  id           String               @id @default(uuid()) @db.VarChar(36)
  nom          String
  prix_vente   Float
  quantite     Float                @db.Real
  created_at   DateTime             @default(now())
  updated_at   DateTime             @updatedAt
  logs         Produit_Final_logs[]
  Vente_logs   Vente_logs[]
  produit_sell produit_sell[]
  retorn_logs  retorn_logs[]
}

model Vendur {
  id              String         @id @default(uuid()) @db.VarChar(36)
  nom             String
  le_prix_a_payer Float          @default(0)
  le_prix_a_paye  Float          @default(0)
  frais_de_prix   Float          @default(0)
  created_at      DateTime       @default(now())
  updated_at      DateTime       @updatedAt
  Vente_logs      Vente_logs[]
  loss            loss[]
  prix_a_paye     prix_a_paye[]
  produit_sell    produit_sell[]
  retorn_logs     retorn_logs[]
}

model Produit_Final_logs {
  id            String        @id @default(uuid()) @db.VarChar(36)
  stock_initial Int
  production    Int
  ventes        Int
  retours       Int
  stock_final   Int
  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt
  produit_id    String
  produit       Produit_Final @relation(fields: [produit_id], references: [id])
}

model Vente_logs {
  id         String        @id @default(uuid()) @db.VarChar(36)
  vendur_id  String
  produit_id String
  quantite   Int
  prix       Float
  created_at DateTime      @default(now())
  updated_at DateTime      @updatedAt
  produit    Produit_Final @relation(fields: [produit_id], references: [id])
  vendur     Vendur        @relation(fields: [vendur_id], references: [id])
}

model produit_sell {
  id         String        @id @default(uuid()) @db.VarChar(36)
  produit_id String
  vendur_id  String
  quantite   Int
  prix       Float
  created_at DateTime      @default(now())
  updated_at DateTime      @updatedAt
  produit    Produit_Final @relation(fields: [produit_id], references: [id])
  vendur     Vendur        @relation(fields: [vendur_id], references: [id])
}

model prix_a_paye {
  id         String   @id @default(uuid()) @db.VarChar(36)
  vendur_id  String
  type       String
  prix       Float
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  vendur     Vendur   @relation(fields: [vendur_id], references: [id])
}

model frais_de_prix {
  id         String   @id @default(uuid()) @db.VarChar(36)
  vendur_id  String
  prix       Float
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  type       String
}

model loss {
  id         String   @id @default(uuid()) @db.VarChar(36)
  vendur_id  String
  prix       Float
  produit_id String
  quantite   Float
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  vendur     Vendur   @relation(fields: [vendur_id], references: [id])
}

model retorn_logs {
  id         String        @id @default(uuid()) @db.VarChar(36)
  vendur_id  String
  produit_id String
  quantite   Float
  created_at DateTime      @default(now())
  updated_at DateTime      @updatedAt
  produit    Produit_Final @relation(fields: [produit_id], references: [id])
  vendur     Vendur        @relation(fields: [vendur_id], references: [id])
}

model external_expense {
  id         String   @id @default(uuid()) @db.VarChar(36)
  prix       Float
  type       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model contribution {
  id         String   @id @default(uuid()) @db.VarChar(36)
  prix       Float
  type       String   @default("contribution")
  user_id    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       User     @relation(fields: [user_id], references: [id])
}

model total_Selles {
  id         String   @id @default(uuid()) @db.VarChar(36)
  prix       Float
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  quantite   Int
}

model total_expenses {
  id         String   @id @default(uuid()) @db.VarChar(36)
  prix       Float
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
